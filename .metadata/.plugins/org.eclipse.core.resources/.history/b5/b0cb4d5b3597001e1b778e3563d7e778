package thread_task_p;

import java.util.ArrayList;
import java.util.List;


/* 손님이 들어왔을 경우에 주방장이 일을 시작하며,
 * 손님의 인원수당 하나의 음식만 나가야 한다.
 * 주방장은 동시에 여러 음식을 조리할 수 없다.
 * 조리중은 sleep으로 배식구 사라지기 대기중은 suspend로 표현해볼까?
 * */
public class Chef extends Thread{
	Restaurant rest;
	List<String> cookedMenu;
	boolean isCooking;
	int cookCnt;
	
	
	public Chef(String name, Restaurant restaurant) {
		super(name);
		this.rest = restaurant;
		cookedMenu = new ArrayList<String>();
	}
	
	//쉐프 전용 음식 올려두기.
	synchronized public void putFood() {
		rest.thereIsDistribution =  true; 
		//여기에 무슨 음식이 올라갈 지 확인==>
	}
	
	
	
	void waitting() {
		System.out.println(getName()+"조리 대기 중");
	}
	
	@Override
	public void run() {
		System.out.println(getName()+ " 출근 했습니다.");
		
		
		while(true) {
			try {
				sleep(500);
				//손님이 0명이고, 조리중이 아니라면 요리사는 대기.
				if(rest.consumerCnt == 0 && !isCooking) {
					waitting();
					sleep(1000);
				}
				
				
				
				
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			
			
			
			
		}
		
		
		
	}
	
	
	
	
}
