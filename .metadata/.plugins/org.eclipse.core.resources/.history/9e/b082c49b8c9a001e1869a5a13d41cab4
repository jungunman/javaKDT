package net_p;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.Socket;
import java.util.Map;
import java.util.Scanner;


public class WoongReciver extends Thread{
	String nick;
	Socket sock;
	DataOutputStream dos; //유저의 writer
	DataInputStream dis; //유저의 reader
	WoongServer ws; // 서버 주소 저장
	Scanner sc;//닉네임 및 채팅 입력
	
	public WoongReciver(Socket client , WoongServer ws) {
		this.sock = client;
		this.sc = new Scanner(System.in);
		System.out.print("닉네임 입력 : ");
		try {
			this.ws = ws;
			this.nick = sc.nextLine();
			System.out.println("들어옴 1"+this.nick);
			this.dos = new DataOutputStream(sock.getOutputStream());
			this.dis = new DataInputStream(sock.getInputStream());
			
			if(joinUser()) {
				throw new Exception("닉네임 중복으로 입장 할 수 없음 ㅎㅅㅎ");
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
	}
	
	public boolean joinUser() {
		if(ws.users.containsKey(this.nick)) {
			return true;
		}			
		
		sendToAll("[ "+this.nick+"님이 입장 하셨습니다 ]");
		ws.users.put(this.nick, dos);
		sendToAll("동시 접속자 : "+ws.users.size()+"명");
		return false;
	}
	
	void sendToAll(String msg) {
		for (Map.Entry<String, DataOutputStream> user : ws.users.entrySet()) {
			try {
				user.getValue().writeUTF(msg);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	}
	
	
	@Override
	public void run() {
		try {
			while(dis != null) {
				String word = dis.readUTF();
				sendToAll(nick +" : "+word);
			}
		}catch(Exception e) {
			e.printStackTrace();
		} finally {
			ws.users.remove(this.nick);
			sendToAll(this.nick+"퇴장");
			sendToAll("동시 접속자 : "+ws.users.size()+"명");
		}
	
	
	}
	
}