package thread_task_p;

import java.util.ArrayList;
import java.util.List;

public class Chef extends Thread{
	Restaurant rest;
	List<String> cookedMenu;
	boolean isCooking;
	int cookCnt;
	Foods<String, Integer, Integer> food;
	
	public Chef(String name, Restaurant restaurant) {
		super(name);
		this.rest = restaurant;
		cookedMenu = new ArrayList<String>();
	}
	
	synchronized void putFood() {
		rest.thereIsDistribution = true; //배식대에 음식을 올려뒀다고 알려두고
		rest.distribution = food;//배식대에 음식을 올려두고.
		food = null;//내 음식 삭제
	}
	
	
	synchronized void makeFood() {
		int ranFood = (int)(Math.random()*3);
		food = rest.menu.get(ranFood);
		System.out.println(getName()+"가 ( "+food.foodName+" )을 만들기 시작했습니다.");
		try {
			sleep(food.cookingTime);//조리중이고.
			System.out.println(getName()+"가 ( "+food.foodName+" )을 완성!");
			cookedMenu.add(food.foodName); // 만든 음식 리스트 추가하고.
			cookCnt++; //음식을 완성했으니 카운트 1 올리고
			//만들었는데 배식대에 음식이 생기면
			if(rest.thereIsDistribution) {
				System.out.println(getName()+"가 배식대에 음식이 있어 ( "+food.foodName+" )을 보관합니다.");
				return;
			}
			//만들었는데 배식대에 음식이 없다면
			rest.thereIsDistribution = true; //배식대에 올렸단거 알려줌
			rest.distribution = food; //배식대에 음식을 올리고
			food = null; //배식대에 음식을 올렸으니 내껀 삭제
		} catch (InterruptedException e) {
		}
		
		
	}
	
	
	@Override
	public void run() {
		int oper = rest.operTime/1000;
		
		
		System.out.println(getName()+ " 출근 했습니다.");
		//가게 문 닫을 때까지 강제 노동
		while(oper >= rest.current) {
			int ranSleep = (int)(Math.random()*500+500); 
			try {
				if(!rest.thereIsDistribution) {// 음식이 없다면
					sleep(ranSleep);
					if(rest.joinConsumer) {//고객이 요청했다면
						sleep(ranSleep);
						if(food != null) { //내가 음식을 가지고 있다면.
							putFood();//내가 만든 음식을 배식대에 올리는 메소드로
						}else {//내가 음식을 가지고 있지 않다면
							makeFood(); // 음식 만드는 메소드로
						}
						
						
						
						
						
						
					}
				}
			}catch (InterruptedException e) {
				
			}
			
		}
		
		//퇴근이 되었을 때!
		System.out.println("\n\n■□■□■□ 요리사 ■□■□■□");
		System.out.println(getName()+"이 만들었던 음식 총("+cookCnt+"개) ====>");
		for (String menu : cookedMenu) {
			System.out.println(menu);
		}
	}
	
	
	
	
}
